{% if isAuth %}
  <p>Добро пожаловать <a href="/profile">{{ userName }}</a>!</p>
    <br>
    <a href="?logout" class="black-button">Выйти</a>
{% else %}
    {% include 'auth.twig' %}
{% endif %} 

<h2>Что нового сделано</h2>
<ul>
    <li>Прикрутил репозитории. При стыковке с прошлой релизацией отзывов пришлось немного костыли изобретать (у меня же там репозиторий может
         к разным таблицам прикручиваться и накладывается фильтр на Categoty_id). В идеале конечно переписать с нуля, зная что понадобится. 
        Сейчас из-за несовершенства своего "мини-фреймворка" многие вещи кривовато прикрутил.</li>
    <li>Добавил отзывы общие и отзывы к товару.</li>
    <li>Добавил корзину и добавку товара в корзину.</li>
    <li>Добавил возможность изменять имя пользователя на странице "profile"</li>
    <li>Ушел от статики Db, репозитарии теперь DI (связи создаются моим конейнером).</li>
</ul>

<h3>Как я себе сейчас вижу то, что навоял</h3>
<ul>
    <li>Я попытался сделать упрощенную реализацию взаимосвязей моделей. Теперь из-за этого при выводе товара в корзину для каждой позиции делается запрос по получению товара, соответствующего позиции в корзине. 
        С точки зрения количества обращений к базе данных понимаю, что нужно через JOIN. Но мой движок этого не позволяет. Решил показать эту функциональность движка.
        Не эффективно, но работает. Т.е. свойством экземпляра модели CartItem является экземпляр модели Product. Архитектурно красиво, а вот с точки зрения скорости - не очень!
    </li>
    <li>В процессе разработки фукнциональности, заложенной изначально при разработке QueryBuilder и Repository, не хватило для более сложных моделей. Поэтому пришлось
        придумывать небольшие извращения например systemProps в репозитарии. Это те поля по которым делаем отбор в СУБД, но не отдаем их в модель. Например session_id.
    </li>
    <li>Кода получилось много. Времени ушло тоже много. Наверно не успею перейти на ваш шаблон. Завершу оформление заказов и возможно попробую код причесать. Но вот на счет
        причесывания не уверен. Скорее всего придется переписывать "фреймворк"(( Этого по объективным причинам сделать не успею.)))
    </li>
    <li>Понимаю, что многое из того, что тут понаписал на практике не нужно. Но вот для того, чтобы покодить и к синтаксису привыкнуть - самое то. 
        Все меньше ошибок при отладке возникает. 
    </li>
    <li>Завершу проект и пока с писаниной завершу, хочу перечитать вдумчиво Котерова.</li>
</ul>
